services:
  db:
    image: postgres:17-alpine
    container_name: kairos_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: kairos_db
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      timeout: 45s
      interval: 10s
      retries: 10
    networks:
      kairos-network:

  app:
    build: .
    container_name: kairos_app
    restart: on-failure
    depends_on:
      - db
      - keycloak
    ports:
      - "8080:8080"  # HTTP
      - "8443:8443"  # HTTPS
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/kairos_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
      SPRING_JPA_SHOW_SQL: "true"
      JWT_SECRET_KAIROS: ${JWT_SECRET_KAIROS}
      GOOGLE_CLIENT_ID_KAIROS: ${GOOGLE_CLIENT_ID_KAIROS}
      GOOGLE_CLIENT_SECRET_KAIROS: ${GOOGLE_CLIENT_SECRET_KAIROS}
      KEYCLOAK_CLIENT_ID_KAIROS: ${KEYCLOAK_CLIENT_ID_KAIROS}
      KEYCLOAK_CLIENT_SECRET_KAIROS: ${KEYCLOAK_CLIENT_SECRET_KAIROS}
    networks:
      kairos-network:

  keycloak_db:
    image: postgres:17-alpine
    container_name: keycloak_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: keycloak_db
    ports:
      - "5435:5432"
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    networks:
      kairos-network:

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: kairos_keycloak
    restart: unless-stopped
    depends_on:
      - keycloak_db
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak_db:5432/keycloak_db
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HTTP_PORT: 8081
      KC_HOSTNAME: keycloak
      KC_HOSTNAME_STRICT: "false"
    ports:
      - "8081:8081"
    command:
      - start-dev
      - --http-port=8081
    networks:
      kairos-network:

volumes:
  db_data:
  keycloak_data:

networks:
  kairos-network:
